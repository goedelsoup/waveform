# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: Â© 2025 Cory Parent <goedelsoup+waveform@goedelsoup.io>

# Advanced Contract Example: Conditional Validation
# This contract demonstrates sophisticated validation rules including conditional logic,
# range validation, pattern matching, and more.

publisher: "payment-service"
version: "2.0.0"
description: "Advanced payment service contract with conditional validation"

# Use pipeline selectors for dynamic matching
pipeline_selectors:
  selectors:
    - field: "type"
      operator: "equals"
      value: "trace"
    - field: "tags.service"
      operator: "matches"
      value: "payment.*"
  priority: 10

inputs:
  traces:
    - span_name: "process_payment"
      service_name: "payment-service"
      attributes:
        payment.method: "credit_card"
        payment.amount: 100.50
        http.method: "POST"
        http.status_code: 200

# Advanced validation rules
validation_rules:
  # Conditional validation: If payment method is credit_card, require CVV
  - field: "span.attributes.payment.cvv"
    operator: "exists"
    condition:
      if:
        field: "span.attributes.payment.method"
        operator: "equals"
        value: "credit_card"
    description: "CVV is required for credit card payments"
    severity: "error"

  # Range validation for payment amounts
  - field: "span.attributes.payment.amount"
    operator: "in_range"
    range:
      min: 0.01
      max: 10000.00
      inclusive: true
    description: "Payment amount must be between $0.01 and $10,000"
    severity: "error"

  # Pattern validation for transaction IDs
  - field: "span.attributes.transaction.id"
    operator: "matches"
    pattern: "^txn_[0-9a-f]{32}$"
    description: "Transaction ID must follow the pattern txn_<32-hex-chars>"
    severity: "warning"

  # Complex conditional logic with AND/OR
  - field: "span.attributes.fraud.score"
    operator: "less_or_equal"
    value: 0.8
    condition:
      or:
        - field: "span.attributes.payment.amount"
          operator: "greater_than"
          value: 1000
        - field: "span.attributes.customer.risk_level"
          operator: "equals"
          value: "high"
    description: "High-value or high-risk payments must have low fraud scores"
    severity: "error"

  # Temporal validation: Processing time should be reasonable
  - field: "span.duration"
    operator: "less_than"
    value: "5s"
    temporal:
      window_size: "1m"
      aggregation: "avg"
      threshold: "3s"
      comparison: "less_than"
    description: "Payment processing should complete quickly"
    severity: "warning"

matchers:
  traces:
    - span_name: "process_payment"
      attributes:
        payment.method: "credit_card"
        payment.status: "completed"
        http.status_code: 200

      # Advanced matchers
      validation_rules:
        # Validate that the payment was processed successfully
        - field: "span.attributes.payment.status"
          operator: "one_of"
          values: ["completed", "authorized", "captured"]
          description: "Payment must be in a valid final state"

        # Validate response time is within acceptable range
        - field: "span.attributes.response_time_ms"
          operator: "in_range"
          range:
            min: 10
            max: 5000
            inclusive: true
          description: "Response time should be reasonable"

      # Count validation
      count:
        expected: 1
        operator: "equals"

      # Duration validation
      duration:
        min: "50ms"
        max: "5s"
        tolerance: "100ms"

      # Status code validation
      status_code:
        class: "2xx"
        not_allowed: [400, 401, 403, 500, 502, 503, 504]

# Schema validation for this contract
schema:
  version: "2.0"
  required_fields: ["publisher", "version", "inputs", "matchers"]
  field_types:
    publisher: "string"
    version: "string"
    description: "string"
  validation_rules:
    - field: "publisher"
      type: "string"
      required: true
      pattern: "^[a-z][a-z0-9-]*[a-z0-9]$"
      description: "Publisher must be lowercase with hyphens"
    - field: "version"
      type: "string"
      required: true
      pattern: "^[0-9]+\\.[0-9]+\\.[0-9]+$"
      description: "Version must follow semantic versioning"
